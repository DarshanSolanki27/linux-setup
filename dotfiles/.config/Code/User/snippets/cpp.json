{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"cpp-template": {
		"prefix": "#1",
		"body": [
		  "#include <algorithm>",
		  "#include <cmath>",
		  "#include <iomanip>",
		  "#include <iostream>",
		  "#include <map>",
		  "#include <queue>",
		  "#include <set>",
		  "#include <stack>",
		  "#include <string>",
		  "#include <vector>",
		  "",
		  "using namespace std;",
		  "using ll = long long;",
		  "",
		  "void solution() {",
		  "    $0",
		  "}",
		  "",
		  "int main() {",
		  "    ios::sync_with_stdio(false);",
		  "    cin.tie(nullptr);",
		  "",
		  "    int tests;",
		  "    cin >> tests;",
		  "    while (tests-- > 0)",
		  "        solution();",
		  "",
		  "#ifdef LOCAL_DEFINE",
		  "    cerr << \"━━━━━━━━━━━━━━━━━\" << '\\n';",
		  "    cerr << \"Time : \" << (float)clock() / CLOCKS_PER_SEC << \"s\" << '\\n';",
		  "#endif",
		  "",
		  "    return 0;",
		  "}",
		  ""
		],
		"description": "cpp-template"
	  },
	  "cpp-no-test-cases-template": {
		"prefix": "#0",
		"body": [
		  "#include <algorithm>",
		  "#include <cmath>",
		  "#include <iomanip>",
		  "#include <iostream>",
		  "#include <map>",
		  "#include <queue>",
		  "#include <set>",
		  "#include <stack>",
		  "#include <string>",
		  "#include <vector>",
		  "",
		  "using namespace std;",
		  "using ll = long long;",
		  "",
		  "void solution() {",
		  "    $0",
		  "}",
		  "",
		  "int main() {",
		  "    ios::sync_with_stdio(false);",
		  "    cin.tie(nullptr);",
		  "",
		  "    solution();",
		  "",
		  "#ifdef LOCAL_DEFINE",
		  "    cerr << \"━━━━━━━━━━━━━━━━━\" << '\\n';",
		  "    cerr << \"Time : \" << (float)clock() / CLOCKS_PER_SEC << \"s\" << '\\n';",
		  "#endif",
		  "",
		  "    return 0;",
		  "}",
		  ""
		],
		"description": "cpp-no-test-cases-template"
	  },
	  "leetcode-template": {
		"prefix": "#lc",
		"body": [
		  "#include <algorithm>",
		  "#include <cmath>",
		  "#include <iomanip>",
		  "#include <iostream>",
		  "#include <map>",
		  "#include <queue>",
		  "#include <set>",
		  "#include <stack>",
		  "#include <string>",
		  "#include <vector>",
		  "",
		  "using namespace std;",
		  "using ll = long long;",
		  "",
		  "$0",
		  "",
		  "int main() {",
		  "    ios::sync_with_stdio(false);",
		  "    cin.tie(nullptr);",
		  "",
		  "#ifdef LOCAL_DEFINE",
		  "    cerr << \"━━━━━━━━━━━━━━━━━\" << '\\n';",
		  "    cerr << \"Time : \" << (float)clock() / CLOCKS_PER_SEC << \"s\" << '\\n';",
		  "#endif",
		  "",
		  "    return 0;",
		  "}",
		  ""
		],
		"description": "cpp-no-test-cases-template"
	  }
}